global !p

from mdtex.scopes import text
from common.time import get_creation_time, get_modification_time

def front_matter(snip):
    pre_title = snip.buffer[1][7:]
    pre_date = snip.buffer[2][6:]
    snip.buffer[0:4] = ''
    template = '''---
title: ${{1:{title}}}
date: {date}
updated: {date}
draft: ${{2|true,false|}}
katex: ${{3|true,false|}}
categories: $4
tags: $5
---
$0'''
    snip.expand_anon(template.format(title = pre_title, date = pre_date))

endglobal

context "snip.line == 0 and snip.column == 0"
pre_expand "front_matter(snip)"
snippet @ "Template" A
endsnippet

context "text()"
snippet note "Annotation" w
{% note ${1|default,primary,success,info,warning,danger} %}
##### $2
$3
{% endnote %}
$0
endsnippet

context "text()"
snippet date "Date" b
date: `!p snip.rv = get_modification_time(path)`
endsnippet

context "text()"
snippet dat "Date Update" b
date: `!p snip.rv = get_modification_time(path)`
endsnippet

context "text()"
snippet upd "Updated" b
updated: `!p snip.rv = get_modification_time(path)`
endsnippet

context "text()"
snippet tabs "Tabs" b
{% tabs $1, ${2:-1} %}
$3
{% endtabs %}
$0
endsnippet

context "text()"
snippet tab "Tab" b
<!-- tab $1 -->
$2
<!-- endtab -->
$0
endsnippet

context "text()"
snippet label "Label" w
{% label ${1|default,primary,success,info,warning,danger|} @$2 %}$0
endsnippet

context "text()"
snippet "^categories: (.+)" "Categories Format" ir
`!p
categories = match.group(1).split(",")
format_categories = "categories:"
for category in categories:
    format_categories += "\n  - [" + category.strip() + "]"
snip.rv = format_categories
`
endsnippet

context "text()"
snippet "^tags: (.+)" "Tags Format" ir
`!p
tags = match.group(1).split(",")
format_tags = "tags:"
for tag in tags:
    format_tags += "\n  - " + tag.strip()
snip.rv = format_tags
`
endsnippet
